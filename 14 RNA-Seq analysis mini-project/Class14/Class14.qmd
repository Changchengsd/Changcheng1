---
title: "Class14_RNA-Seq analysis mini-project"
author: "Changcheng Li (PID: A69027828)"
format: pdf
toc: true
---

#Section 1. Differential Expression Analysis

#Data Import

```{r}
library(DESeq2)

metaFile <- "data/GSE37704_metadata.csv"
countFile <- "data/GSE37704_featurecounts.csv"
```

```{r}
# Import metadata and take a peak
colData = read.csv("GSE37704_metadata.csv", row.names=1)
head(colData)
```

```{r}
# Import countdata
countData = read.csv("GSE37704_featurecounts.csv", row.names=1)
head(countData)
```

I need to get rid of the first length column in counts:
>Q. Complete the code below to remove the troublesome first column from countData

```{r}
# Note we need to remove the odd first $length col
countData <- as.matrix(countData[,-1])
head(countData)
```

#Data Tidying

```{r}
all(colnames(countData) == colData$id)
```

>Q. How many genes do we have to start with?

```{r}
nrow(countData)
```

[1] 19808

>Q. Complete the code below to filter countData to exclude genes (i.e. rows) where we have 0 read count across all samples (i.e. columns).

```{r}
to.rm.ind <- rowSums(countData) == 0
countData <- countData[!to.rm.ind,]
nrow(countData)
```

```{r}
# Filter count data where you have 0 read count across all samples.
countData = countData[rowSums(countData) != 0, ]
head(countData)
```

```{r}
nrow(countData)
```

```{r}
#| message: false
dds = DESeqDataSetFromMatrix(countData=countData,
                             colData=colData,
                             design=~condition)
dds = DESeq(dds)
```

```{r}
dds
```

```{r}
res = results(dds)
```

>Q. Call the summary() function on your results to get a sense of how many genes are up or down-regulated at the default 0.1 p-value cutoff.

```{r}
summary(res)
```
4349 genes are up-regulated while 4396 genes are down-regulated.

#Side-note: QC with PCA

```{r}
pc<-prcomp(t(countData),scale=T)
summary(pc)
```

```{r}
plot(pc$x[,1],pc$x[,2],col=as.factor(colData$condition),pch=15)
```


```{r}
plot( res$log2FoldChange, -log(res$padj) )
```

>Q. Improve this plot by completing the below code, which adds color and axis labels

```{r}
# Make a color vector for all genes
mycols <- rep("gray", nrow(res) )

# Color red the genes with absolute fold change above 2
mycols[ abs(res$log2FoldChange) > 2 ] <- "red"

# Color blue those with adjusted p-value less than 0.01
#  and absolute fold change more than 2
inds <- (res$padj < 0.01) & (abs(res$log2FoldChange) > 2 )
mycols[ inds ] <- "blue"

plot( res$log2FoldChange, -log(res$padj), col=mycols, xlab="Log2(FoldChange)", ylab="-Log(P-value)" )
```

#Add annotation data
>Q. Use the mapIDs() function multiple times to add SYMBOL, ENTREZID and GENENAME annotation to our results by completing the code below.

```{r}
library("AnnotationDbi")
library("org.Hs.eg.db")

columns(org.Hs.eg.db)

res$symbol = mapIds(org.Hs.eg.db,
                    keys=row.names(res), 
                    keytype="ENSEMBL",
                    column= "SYMBOL",
                    multiVals="first")

res$entrez = mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype="ENSEMBL",
                    column="ENTREZID",
                    multiVals="first")

res$name =   mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype="ENSEMBL",
                    column="GENENAME",
                    multiVals="first")

head(res, 10)
```

#Save my results
>Q. Finally for this section let's reorder these results by adjusted p-value and save them to a CSV file in your current project directory.

```{r}
res = res[order(res$pvalue),]
write.csv(res, file="deseq_results.csv")
```

#Section 2. Pathway Analysis

#KEGG pathways

```{r}
#| message: false
# Run in your R console (i.e. not your Rmarkdown doc!)
BiocManager::install( c("pathview", "gage", "gageData") )

# For old vesrsions of R only (R < 3.5.0)!
#source("http://bioconductor.org/biocLite.R")
#biocLite( c("pathview", "gage", "gageData") )
```

#Geneset enrichment/pathway analysis

```{r}
library(pathview)
```

The gage() function wants a “vector of importance” in our case. Here it will be fold-change
values with associated entrez gene names.

```{r}
library(gage)
library(gageData)

data(kegg.sets.hs)
data(sigmet.idx.hs)

# Focus on signaling and metabolic pathways only
kegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]

# Examine the first 3 pathways
head(kegg.sets.hs, 3)
```

```{r}
foldchanges = res$log2FoldChange
names(foldchanges) = res$entrez
head(foldchanges)
```

```{r}
# Get the results
keggres = gage(foldchanges, gsets=kegg.sets.hs)
```

```{r}
attributes(keggres)
```

```{r}
foldchanges<-res$log2FoldChange
names(foldchanges)<-res$entrez
data(kegg.sets.hs)
data(sigmet.idx.hs)
keggres = gage(foldchanges,gsets=kegg.sets.hs)
head(keggres$less)
```


```{r}
# Look at the first few down (less) pathways
head(keggres$less)
```

```{r}
#| message: false
pathview(gene.data=foldchanges, pathway.id="hsa04110")
```

```{r}
#| message: false
# A different PDF based output of the same data
pathview(gene.data=foldchanges, pathway.id="hsa04110", kegg.native=FALSE)
```

```{r}
## Focus on top 5 upregulated pathways here for demo purposes only
keggrespathways <- rownames(keggres$greater)[1:5]

# Extract the 8 character long IDs part of each string
keggresids = substr(keggrespathways, start=1, stop=8)
keggresids
```

```{r}
#| message: false
pathview(gene.data=foldchanges, pathway.id=keggresids, species="hsa")
```

>Q. Can you do the same procedure as above to plot the pathview figures for the top 5 down-reguled pathways?

```{r}
## Focus on top 5 down-reguled pathways here for demo purposes only
keggrespathways <- rownames(keggres$less)[1:5]

# Extract the 8 character long IDs part of each string
keggresids = substr(keggrespathways, start=1, stop=8)
keggresids
```

```{r}
#| message: false
pathview(gene.data=foldchanges, pathway.id=keggresids, species="hsa")
```

Have a look at my figure(Figure 1)


![Cell cycle hsa04110](hsa04110.pathview.png){#fig-cellcycle}


#Section 3. Gene Ontology (GO)

```{r}
data(go.sets.hs)
data(go.subs.hs)

# Focus on Biological Process subset of GO
gobpsets = go.sets.hs[go.subs.hs$BP]

gobpres = gage(foldchanges, gsets=gobpsets, same.dir=TRUE)

lapply(gobpres, head)
```

#Reactome
We will use the online version of Reactome. It wants a list of your genes. We will write this
out from R here:

```{r}
sig_genes <- res[res$padj <= 0.05 & !is.na(res$padj), "symbol"]
print(paste("Total number of significant genes:", length(sig_genes)))
```

```{r}
write.table(sig_genes, file="significant_genes.txt", row.names=FALSE, col.names=FALSE, quote=FALSE)
```

>Q.: What pathway has the most significant “Entities p-value”? Do the most significant pathways listed match your previous KEGG results? What factors could cause differences between the two methods?

"Cell Cycle, Mitotic" pathway has the most significant “Entities p-value” of 5.28E-4. 
It matches the most down-regulated pathway in KEGG results.
Reactome seems to be focused more on down-regulated. Probably the algorithm causes differences, we should look at results of different tools.

![Cell Cycle, Mitotic, R-HSA-69278](R-HSA-69278.png){#2fig-cellcycle}

#Section 5. GO online (OPTIONAL)


